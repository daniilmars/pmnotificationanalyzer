name: Build and Deploy to BTP

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/pm-analyzer-backend:latest
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Inject Docker Image Tag and Credentials into MTA YAML
        run: |
          # Construct the full Docker image tag
          DOCKER_IMAGE_FULL_TAG="${{ secrets.DOCKER_USERNAME }}/pm-analyzer-backend:latest"
          
          # Replace the image tag placeholder
          sed -i "s|__DOCKER_IMAGE_FULL_TAG__|$DOCKER_IMAGE_FULL_TAG|g" mta.yaml

          # Replace the Docker username placeholder for credentials
          sed -i "s|__DOCKER_USERNAME_PLACEHOLDER__|${{ secrets.DOCKER_USERNAME }}|g" mta.yaml

          # Replace the Docker token placeholder for credentials
          sed -i "s|__DOCKER_TOKEN_PLACEHOLDER__|${{ secrets.DOCKER_TOKEN }}|g" mta.yaml
          
          # Replace Auth0 environment variable placeholders
          sed -i "s|__AUTH0_DOMAIN_PLACEHOLDER__|${{ secrets.AUTH0_DOMAIN }}|g" mta.yaml
          sed -i "s|__API_AUDIENCE_PLACEHOLDER__|${{ secrets.API_AUDIENCE }}|g" mta.yaml
          
          # Optional: Print the modified mta.yaml for debugging
          echo "--- Modified mta.yaml ---"
          cat mta.yaml
          echo "-------------------------"
        working-directory: ./pm-analyzer-fiori 

      - name: Install MTA Build Tool
        run: npm install -g mbt

      - name: Display Manifest Content for Debugging
        run: |
          echo "--- Checking manifest.json content before build ---"
          cat ./pm-analyzer-fiori/webapp/manifest.json
          echo "----------------------------------------------------"
      
      - name: Build MTA
        run: mbt build -p=cf
        working-directory: ./pm-analyzer-fiori
        
      - name: Install CF CLI
        run: |
          wget -q -O cf-cli.tgz "https://github.com/cloudfoundry/cli/releases/download/v8.7.5/cf8-cli_8.7.5_linux_x86-64.tgz"
          tar -zxvf cf-cli.tgz
          sudo mv cf8 /usr/local/bin/cf
          cf --version
          
      - name: Install CF CLI MTA Plugin
        run: |
          cf add-plugin-repo CF-Community https://plugins.cloudfoundry.org/
          cf install-plugin -r CF-Community multiapps -f
          cf plugins

      - name: CF CLI Login
        env:
          CF_API: ${{ secrets.CF_API }}
          CF_USERNAME: ${{ secrets.CF_USERNAME }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
          CF_ORG: ${{ secrets.CF_ORG }}
          CF_SPACE: ${{ secrets.CF_SPACE }}
        run: |
          cf login -a "$CF_API" -u "$CF_USERNAME" -p "$CF_PASSWORD" -o "$CF_ORG" -s "$CF_SPACE"

      - name: Verify CF Target
        run: cf target

      - name: Delete Backend App (if it exists)
        env:
          CF_API: ${{ secrets.CF_API }}
          CF_USERNAME: ${{ secrets.CF_USERNAME }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
          CF_ORG: ${{ secrets.CF_ORG }}
          CF_SPACE: ${{ secrets.CF_SPACE }}
        run: |
          echo "Attempting to delete pm-analyzer-backend app if it exists..."
          cf delete pm-analyzer-backend -f || true 
          echo "Deletion attempt complete."

      - name: Deploy to BTP
        env:
          CF_API: ${{ secrets.CF_API }}
          CF_USERNAME: ${{ secrets.CF_USERNAME }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
          CF_ORG: ${{ secrets.CF_ORG }}
          CF_SPACE: ${{ secrets.CF_SPACE }}
        run: |
          cf deploy ./pm-analyzer-fiori/mta_archives/com.sap.pm.pmanalyzerfiori_0.0.1.mtar -f
          echo "Attempting to download deployment logs for ID: 23042875-6a48-11f0-9108-eeee0a8c5caf"
          cf dmol -i 23042875-6a48-11f0-9108-eeee0a8c5caf || true