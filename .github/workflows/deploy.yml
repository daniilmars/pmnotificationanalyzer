name: Build and Deploy to SAP BTP

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  MTA_ID: com.sap.pm.pmanalyzerfiori

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          # Use the unique commit SHA for the tag for traceability and safety
          tags: ${{ secrets.DOCKER_USERNAME }}/pm-analyzer-backend:${{ github.sha }}

      - name: Inject Docker Image Tag into MTA YAML
        run: |
          # Replace only the image tag placeholder. No credentials should be injected.
          DOCKER_IMAGE_FULL_TAG="${{ secrets.DOCKER_USERNAME }}/pm-analyzer-backend:${{ github.sha }}"
          sed -i "s|__DOCKER_IMAGE_FULL_TAG__|$DOCKER_IMAGE_FULL_TAG|g" ./mta.yaml
          echo "--- Injected Docker image into mta.yaml ---"
          cat mta.yaml
          echo "-------------------------"

      - name: Install MTA Build Tool
        run: npm install -g mbt

      - name: Build MTA Archive
        # mbt build automatically runs 'npm install' and 'npm run build' for the UI module
        # as defined in mta.yaml. It must be run from the project root.
        run: mbt build -p=cf -t=./mta_archives --mtar=${{ env.MTA_ID }}.mtar

      - name: Install CF CLI and MTA Plugin
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update
          sudo apt-get install cf8-cli
          cf install-plugin -f multiapps

      - name: CF CLI Login
        run: |
          cf api "${{ secrets.CF_API }}"
          # The CF_DOCKER_PASSWORD environment variable securely provides credentials for private images
          export CF_DOCKER_PASSWORD="${{ secrets.DOCKER_TOKEN }}"
          cf auth "${{ secrets.CF_USERNAME }}" "${{ secrets.CF_PASSWORD }}"
          cf target -o "${{ secrets.CF_ORG }}" -s "${{ secrets.CF_SPACE }}"

      - name: Deploy to BTP
        # The 'cf deploy' command handles updates gracefully (blue-green), so 'cf delete' is not needed and causes downtime.
        run: cf deploy ./mta_archives/${{ env.MTA_ID }}.mtar -f