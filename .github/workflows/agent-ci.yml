name: Agent CI/CD

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main

jobs:
  agent-driven-ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          npm install
          pip install -r backend/requirements.txt

      - name: Run Agent Tests
        id: tests
        run: npm test

      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      - name: Run Agent Cycle
        id: agent_cycle
        run: |
          node agent/agent-cli.js run think --goal "Validate and test the latest commit"
          node agent/agent-cli.js run do
          # The 'reflect' phase now runs tests and linters internally
          node agent/agent-cli.js run reflect
        continue-on-error: true

      - name: Auto-Repair on Failure
        if: steps.agent_cycle.outcome == 'failure'
        run: |
          echo "ðŸ”´ Agent cycle failed. Starting auto-repair process..."
          node agent/agent-cli.js run repair
          echo "ðŸš€ Repair plan created. Applying fixes..."
          node agent/agent-cli.js run do
          echo "âœ… Fixes applied. Re-running tests..."
          node agent/agent-cli.js run reflect
      
      - name: Upload Agent Logs
        if: always() # Run this step even if previous steps fail
        uses: actions/upload-artifact@v4
        with:
          name: agent-logs
          path: logs/